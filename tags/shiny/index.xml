<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shiny on Jack Olney</title>
    <link>https://jackolney.github.io/tags/shiny/</link>
    <description>Recent content in shiny on Jack Olney</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Apr 2016 09:41:00 +0000</lastBuildDate><atom:link href="https://jackolney.github.io/tags/shiny/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shiny Progress Bars</title>
      <link>https://jackolney.github.io/posts/2016-04-01-shiny/</link>
      <pubDate>Fri, 01 Apr 2016 09:41:00 +0000</pubDate>
      
      <guid>https://jackolney.github.io/posts/2016-04-01-shiny/</guid>
      <description>Lately, I have been working on developing a friendly shiny app around a mathematical model to enable non-modellers to get to grips with the model, play around and perhaps learn something too. This has really been as much about teaching myself Shiny as it has been about enabling others to interact with models.
Shiny, is great package being developed by a handful of developers at RStudio, and it enables anyone to wrap their R code in an HTML front-end that will run on any computer with R installed, and perhaps most importantly, run on any computer if deployed to a Linux server running ShinyServer.</description>
    </item>
    
    <item>
      <title>Interactive Dynamic Models in R</title>
      <link>https://jackolney.github.io/posts/2015-10-16-shiny-cascade/</link>
      <pubDate>Fri, 16 Oct 2015 09:41:00 +0000</pubDate>
      
      <guid>https://jackolney.github.io/posts/2015-10-16-shiny-cascade/</guid>
      <description>As part of a new work package I am part of, we needed to develop a dynamic transmission model of HIV care that has a relatively user-friendly interface and that can be run on almost any device.
The initial choice was to go with an Excel spreadsheet, and have a tab hidden in the background with the model running and a whole bunch of simple stuff at the front for the user to interact with.</description>
    </item>
    
  </channel>
</rss>
