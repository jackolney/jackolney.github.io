<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Jack Olney</title><link>https://jackolney.github.io/tags/python/</link><description>Recent content in Python on Jack Olney</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 01 Jul 2015 09:41:00 +0000</lastBuildDate><atom:link href="https://jackolney.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Calling R from a Python instance</title><link>https://jackolney.github.io/posts/2015-07-01-calling-r-from-python/</link><pubDate>Wed, 01 Jul 2015 09:41:00 +0000</pubDate><guid>https://jackolney.github.io/posts/2015-07-01-calling-r-from-python/</guid><description>&lt;p>After spending several hours today trying to figure out how to call R from an instance of Python running on the departmental cluster, I figured that I better document this.&lt;/p>
&lt;h3 id="why-bother">Why bother?&lt;/h3>
&lt;p>Some background on my problem. I have an individual-based model written in C++ that describes the HIV epidemic in Kenya over time from 1970 to 2036/2056. This model is called through R which supplies a whole bunch of arguments allowing me to simulate a whole bunch of different scenarios. For some time now I have been using Python as a high-level manager for these simulations. I simple stick some python script in a directory, it creates all the directories, writes the R scripts, writes the .bat files and submits the jobs to the cluster.&lt;/p></description></item></channel></rss>